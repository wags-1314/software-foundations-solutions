DIGEST 114cbf4da7a3e31ada975b4c4017bbd7
FLF.Logic
R99:105 LF.Tactics <> <> lib
R951:953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R984:986 Coq.Init.Datatypes <> nat ind
binder 978:978 <> n:1
binder 980:980 <> m:2
R994:996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R990:992 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R989:989 LF.Logic <> n:1 var
R993:993 LF.Logic <> m:2 var
R998:1000 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R997:997 LF.Logic <> m:2 var
R1001:1001 LF.Logic <> n:1 var
R1239:1241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1260:1262 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1291:1293 Coq.Init.Datatypes <> nat ind
binder 1287:1287 <> n:3
R1297:1299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1296:1296 LF.Logic <> n:3 var
prf 1631:1643 <> plus_2_2_is_4
R1654:1656 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1650:1652 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
def 1894:1903 <> plus_claim
R1920:1922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1916:1918 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R1932:1941 LF.Logic <> plus_claim def
prf 2105:2122 <> plus_claim_is_true
R2128:2137 LF.Logic <> plus_claim def
def 2462:2469 <> is_three
R2476:2478 Coq.Init.Datatypes <> nat ind
binder 2472:2472 <> n:4
R2494:2496 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2493:2493 LF.Logic <> n:4 var
R2520:2523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2517:2519 Coq.Init.Datatypes <> nat ind
R2506:2513 LF.Logic <> is_three def
def 2760:2768 <> injective
binder 2771:2771 <> A:5
binder 2773:2773 <> B:6
R2782:2785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2786:2786 LF.Logic <> B:6 var
R2781:2781 LF.Logic <> A:5 var
binder 2777:2777 <> f:7
R2807:2807 LF.Logic <> A:5 var
binder 2801:2801 <> x:8
binder 2803:2803 <> y:9
R2819:2822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2824:2826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2823:2823 LF.Logic <> x:8 var
R2827:2827 LF.Logic <> y:9 var
R2813:2815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2810:2810 LF.Logic <> f:7 var
R2812:2812 LF.Logic <> x:8 var
R2816:2816 LF.Logic <> f:7 var
R2818:2818 LF.Logic <> y:9 var
R2837:2845 LF.Logic <> injective def
prf 2855:2862 <> succ_inj
R2866:2874 LF.Logic <> injective def
R2876:2876 Coq.Init.Datatypes <> S constr
binder 3252:3252 <> A:10
R3263:3266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3268:3271 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3267:3267 LF.Logic <> A:10 var
R3262:3262 LF.Logic <> A:10 var
R3240:3241 Coq.Init.Logic <> eq ind
R3285:3286 Coq.Init.Logic <> eq ind
def 3867:3877 <> and_example
R3890:3893 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3886:3888 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3882:3884 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R3899:3901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3895:3897 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
prf 4274:4282 <> and_intro
binder 4293:4293 <> A:11
binder 4295:4295 <> B:12
R4306:4309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4311:4314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4316:4319 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4315:4315 LF.Logic <> A:11 var
R4320:4320 LF.Logic <> B:12 var
R4310:4310 LF.Logic <> B:12 var
R4305:4305 LF.Logic <> A:11 var
def 4625:4636 <> and_example'
R4649:4652 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4645:4647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4641:4643 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4658:4660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4654:4656 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4679:4687 LF.Logic <> and_intro thm
R4679:4687 LF.Logic <> and_intro thm
R4768:4774 Coq.Init.Datatypes <> nat_ind scheme
def 4842:4853 <> and_exercise
R4872:4874 Coq.Init.Datatypes <> nat ind
binder 4866:4866 <> n:13
binder 4868:4868 <> m:14
R4886:4889 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4895:4898 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4891:4893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4890:4890 LF.Logic <> n:13 var
R4900:4902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4899:4899 LF.Logic <> m:14 var
R4882:4884 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4878:4880 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4877:4877 LF.Logic <> n:13 var
R4881:4881 LF.Logic <> m:14 var
prf 5524:5535 <> and_example2
R5554:5556 Coq.Init.Datatypes <> nat ind
binder 5548:5548 <> n:15
binder 5550:5550 <> m:16
R5573:5576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5582:5584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5578:5580 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5577:5577 LF.Logic <> n:15 var
R5581:5581 LF.Logic <> m:16 var
R5564:5567 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5560:5562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5559:5559 LF.Logic <> n:15 var
R5569:5571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5568:5568 LF.Logic <> m:16 var
prf 5884:5896 <> and_example2'
R5915:5917 Coq.Init.Datatypes <> nat ind
binder 5909:5909 <> n:17
binder 5911:5911 <> m:18
R5934:5937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5943:5945 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5939:5941 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5938:5938 LF.Logic <> n:17 var
R5942:5942 LF.Logic <> m:18 var
R5925:5928 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5921:5923 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5920:5920 LF.Logic <> n:17 var
R5930:5932 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5929:5929 LF.Logic <> m:18 var
prf 6239:6252 <> and_example2''
R6271:6273 Coq.Init.Datatypes <> nat ind
binder 6265:6265 <> n:19
binder 6267:6267 <> m:20
R6281:6284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6290:6293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6299:6301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6295:6297 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6294:6294 LF.Logic <> n:19 var
R6298:6298 LF.Logic <> m:20 var
R6286:6288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6285:6285 LF.Logic <> m:20 var
R6277:6279 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6276:6276 LF.Logic <> n:19 var
prf 6667:6678 <> and_example3
R6697:6699 Coq.Init.Datatypes <> nat ind
binder 6691:6691 <> n:21
binder 6693:6693 <> m:22
R6711:6714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6720:6722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6716:6718 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6715:6715 LF.Logic <> n:21 var
R6719:6719 LF.Logic <> m:22 var
R6707:6709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6703:6705 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6702:6702 LF.Logic <> n:21 var
R6706:6706 LF.Logic <> m:22 var
R6781:6792 LF.Logic <> and_exercise ex
R6781:6792 LF.Logic <> and_exercise ex
prf 7186:7190 <> proj1
binder 7201:7201 <> P:23
binder 7203:7203 <> Q:24
R7221:7224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7225:7225 LF.Logic <> P:23 var
R7216:7219 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7215:7215 LF.Logic <> P:23 var
R7220:7220 LF.Logic <> Q:24 var
prf 7362:7366 <> proj2
binder 7377:7377 <> P:25
binder 7379:7379 <> Q:26
R7397:7400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7401:7401 LF.Logic <> Q:26 var
R7392:7395 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7391:7391 LF.Logic <> P:25 var
R7396:7396 LF.Logic <> Q:26 var
prf 7702:7711 <> and_commut
binder 7722:7722 <> P:27
binder 7724:7724 <> Q:28
R7742:7745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7747:7750 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7746:7746 LF.Logic <> Q:28 var
R7751:7751 LF.Logic <> P:27 var
R7737:7740 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7736:7736 LF.Logic <> P:27 var
R7741:7741 LF.Logic <> Q:28 var
prf 8133:8141 <> and_assoc
binder 8152:8152 <> P:29
binder 8154:8154 <> Q:30
binder 8156:8156 <> R:31
R8181:8184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8185:8185 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8192:8196 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8187:8190 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8186:8186 LF.Logic <> P:29 var
R8191:8191 LF.Logic <> Q:30 var
R8197:8197 LF.Logic <> R:31 var
R8169:8173 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8180:8180 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8168:8168 LF.Logic <> P:29 var
R8175:8178 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8174:8174 LF.Logic <> Q:30 var
R8179:8179 LF.Logic <> R:31 var
R8528:8531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8536:8539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8518:8520 Coq.Init.Logic <> and ind
prf 9097:9105 <> eq_mult_0
R9124:9126 Coq.Init.Datatypes <> nat ind
binder 9118:9118 <> n:32
binder 9120:9120 <> m:33
R9143:9146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9152:9154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9148:9150 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R9147:9147 LF.Logic <> n:32 var
R9151:9151 LF.Logic <> m:33 var
R9134:9137 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9130:9132 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9129:9129 LF.Logic <> n:32 var
R9139:9141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9138:9138 LF.Logic <> m:33 var
R9385:9392 Coq.Init.Peano <> mult_n_O thm
R9385:9392 Coq.Init.Peano <> mult_n_O thm
R9385:9392 Coq.Init.Peano <> mult_n_O thm
prf 9757:9766 <> or_intro_l
binder 9777:9777 <> A:34
binder 9779:9779 <> B:35
R9790:9793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9795:9798 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9794:9794 LF.Logic <> A:34 var
R9799:9799 LF.Logic <> B:35 var
R9789:9789 LF.Logic <> A:34 var
prf 9957:9968 <> zero_or_succ
R9985:9987 Coq.Init.Datatypes <> nat ind
binder 9981:9981 <> n:36
R9995:9998 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9991:9993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9990:9990 LF.Logic <> n:36 var
R10000:10002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9999:9999 LF.Logic <> n:36 var
R10003:10003 Coq.Init.Datatypes <> S constr
R10006:10009 Coq.Init.Peano <> pred syndef
R10011:10011 LF.Logic <> n:36 var
prf 10201:10209 <> mult_eq_0
binder 10222:10222 <> n:37
binder 10224:10224 <> m:38
R10236:10239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10245:10248 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10241:10243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10240:10240 LF.Logic <> n:37 var
R10250:10252 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10249:10249 LF.Logic <> m:38 var
R10232:10234 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10228:10230 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R10227:10227 LF.Logic <> n:37 var
R10231:10231 LF.Logic <> m:38 var
R10382:10393 LF.Logic <> and_exercise ex
R10382:10393 LF.Logic <> and_exercise ex
prf 10521:10529 <> or_commut
binder 10540:10540 <> P:39
binder 10542:10542 <> Q:40
R10560:10564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10566:10569 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10565:10565 LF.Logic <> Q:40 var
R10570:10570 LF.Logic <> P:39 var
R10555:10558 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10554:10554 LF.Logic <> P:39 var
R10559:10559 LF.Logic <> Q:40 var
def 10671:10674 <> test
binder 10693:10693 <> P:41
binder 10695:10695 <> Q:42
R10705:10708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10709:10709 LF.Logic <> Q:42 var
R10704:10704 LF.Logic <> P:41 var
def 10724:10727 <> not'
binder 10730:10730 <> P:43
R10750:10753 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10754:10758 Coq.Init.Logic <> False ind
R10749:10749 LF.Logic <> P:43 var
def 10773:10780 <> function
R10786:10788 Coq.Init.Datatypes <> nat ind
binder 10783:10783 <> n:44
R10793:10795 Coq.Init.Datatypes <> nat ind
R10801:10803 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R10800:10800 LF.Logic <> n:44 var
R10804:10804 LF.Logic <> n:44 var
mod 11768:11772 <> MyNot
def 11787:11789 MyNot not
binder 11792:11792 <> P:45
R11804:11807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11808:11812 Coq.Init.Logic <> False ind
R11803:11803 LF.Logic <> P:45 var
R11835:11837 LF.Logic MyNot not def
not 11825:11825 MyNot ::type_scope:'~'_x
R11873:11876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11863:11865 LF.Logic MyNot not def
R11888:11892 LF.Logic MyNot <> mod
R11902:11906 Coq.Init.Logic <> False ind
prf 12119:12136 <> ex_falso_quodlibet
binder 12148:12148 <> P:46
R12164:12167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12168:12168 LF.Logic <> P:46 var
R12159:12163 Coq.Init.Logic <> False ind
prf 12576:12594 <> not_implies_our_not
binder 12606:12606 <> P:47
R12620:12624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12648:12648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 12633:12633 <> Q:48
R12643:12646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12647:12647 LF.Logic <> Q:48 var
R12642:12642 LF.Logic <> P:47 var
R12617:12618 Coq.Init.Logic <> ::type_scope:'~'_x not
R12619:12619 LF.Logic <> P:47 var
R12687:12689 Coq.Init.Logic <> not def
prf 13007:13018 <> zero_not_one
R13023:13026 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R13290:13292 Coq.Init.Logic <> not def
prf 13912:13920 <> not_False
R13926:13927 Coq.Init.Logic <> ::type_scope:'~'_x not
R13928:13932 Coq.Init.Logic <> False ind
R13951:13953 Coq.Init.Logic <> not def
prf 13992:14021 <> contradiction_implies_anything
binder 14032:14032 <> P:49
binder 14034:14034 <> Q:50
R14046:14046 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14054:14058 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14059:14059 LF.Logic <> Q:50 var
R14048:14051 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R14047:14047 LF.Logic <> P:49 var
R14052:14052 Coq.Init.Logic <> ::type_scope:'~'_x not
R14053:14053 LF.Logic <> P:49 var
R14140:14142 Coq.Init.Logic <> not def
prf 14199:14208 <> double_neg
binder 14219:14219 <> P:51
R14232:14235 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14236:14239 LF.Logic <> not' def
R14242:14244 Coq.Init.Logic <> not def
R14246:14246 LF.Logic <> P:51 var
R14231:14231 LF.Logic <> P:51 var
R14302:14304 Coq.Init.Logic <> not def
def 14577:14607 <> manual_grade_for_double_neg_inf
R14611:14616 Coq.Init.Datatypes <> option ind
R14622:14622 LF.Poly <> ::type_scope:x_'*'_x not
R14619:14621 Coq.Init.Datatypes <> nat ind
R14623:14628 Coq.Strings.String <> string ind
R14634:14637 Coq.Init.Datatypes <> None constr
prf 14736:14749 <> contrapositive
binder 14761:14761 <> P:52
binder 14763:14763 <> Q:53
R14776:14776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14783:14788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14797:14797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14791:14794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14795:14795 Coq.Init.Logic <> ::type_scope:'~'_x not
R14796:14796 LF.Logic <> P:52 var
R14789:14789 Coq.Init.Logic <> ::type_scope:'~'_x not
R14790:14790 LF.Logic <> Q:53 var
R14778:14781 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14782:14782 LF.Logic <> Q:53 var
R14777:14777 LF.Logic <> P:52 var
R14826:14828 Coq.Init.Logic <> not def
R14846:14848 Coq.Init.Logic <> not def
prf 14987:15009 <> not_both_true_and_false
binder 15020:15020 <> P:54
R15032:15034 Coq.Init.Logic <> ::type_scope:'~'_x not
R15042:15042 Coq.Init.Logic <> ::type_scope:'~'_x not
R15036:15039 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15035:15035 LF.Logic <> P:54 var
R15040:15040 Coq.Init.Logic <> ::type_scope:'~'_x not
R15041:15041 LF.Logic <> P:54 var
R15071:15073 Coq.Init.Logic <> not def
def 15362:15394 <> manual_grade_for_informal_not_PNP
R15398:15403 Coq.Init.Datatypes <> option ind
R15409:15409 LF.Poly <> ::type_scope:x_'*'_x not
R15406:15408 Coq.Init.Datatypes <> nat ind
R15410:15415 Coq.Strings.String <> string ind
R15421:15424 Coq.Init.Datatypes <> None constr
prf 15919:15935 <> not_true_is_false
R15950:15953 LF.Basics <> bool ind
binder 15946:15946 <> b:55
R15967:15970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15972:15974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15971:15971 LF.Logic <> b:55 var
R15975:15979 LF.Basics <> false constr
R15959:15962 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R15958:15958 LF.Logic <> b:55 var
R15963:15966 LF.Basics <> true constr
R16054:16056 Coq.Init.Logic <> not def
R16074:16091 LF.Logic <> ex_falso_quodlibet thm
R16074:16091 LF.Logic <> ex_falso_quodlibet thm
prf 16302:16319 <> not_true_is_false'
R16334:16337 LF.Basics <> bool ind
binder 16330:16330 <> b:56
R16351:16354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16356:16358 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16355:16355 LF.Logic <> b:56 var
R16359:16363 LF.Basics <> false constr
R16343:16346 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16342:16342 LF.Logic <> b:56 var
R16347:16350 LF.Basics <> true constr
R16465:16467 Coq.Init.Logic <> not def
prf 16845:16856 <> True_is_true
R16860:16863 Coq.Init.Logic <> True ind
R16879:16879 Coq.Init.Logic <> I constr
R16879:16879 Coq.Init.Logic <> I constr
mod 17539:17543 <> MyIff
def 17558:17560 MyIff iff
binder 17563:17563 <> P:57
binder 17565:17565 <> Q:58
R17578:17578 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17585:17590 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17597:17597 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17580:17583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17584:17584 LF.Logic <> Q:58 var
R17579:17579 LF.Logic <> P:57 var
R17592:17595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17596:17596 LF.Logic <> P:57 var
R17591:17591 LF.Logic <> Q:58 var
R17624:17626 LF.Logic MyIff iff def
not 17610:17610 MyIff ::type_scope:x_'<->'_x
R17728:17732 LF.Logic MyIff <> mod
prf 17744:17750 <> iff_sym
binder 17761:17761 <> P:59
binder 17763:17763 <> Q:60
R17775:17775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17783:17788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17796:17796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17790:17794 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17789:17789 LF.Logic <> Q:60 var
R17795:17795 LF.Logic <> P:59 var
R17777:17781 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17776:17776 LF.Logic <> P:59 var
R17782:17782 LF.Logic <> Q:60 var
prf 17941:17958 <> not_true_iff_false
binder 17969:17969 <> b:61
R17983:17987 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17975:17978 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R17974:17974 LF.Logic <> b:61 var
R17979:17982 LF.Basics <> true constr
R17989:17991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17988:17988 LF.Logic <> b:61 var
R17992:17996 LF.Basics <> false constr
R18068:18084 LF.Logic <> not_true_is_false thm
R18068:18084 LF.Logic <> not_true_is_false thm
prf 18362:18369 <> iff_refl
binder 18380:18380 <> P:62
R18393:18397 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18392:18392 LF.Logic <> P:62 var
R18398:18398 LF.Logic <> P:62 var
prf 18483:18491 <> iff_trans
binder 18502:18502 <> P:63
binder 18504:18504 <> Q:64
binder 18506:18506 <> R:65
R18518:18518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18526:18530 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18531:18531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18539:18544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18552:18552 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18546:18550 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18545:18545 LF.Logic <> P:63 var
R18551:18551 LF.Logic <> R:65 var
R18533:18537 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18532:18532 LF.Logic <> Q:64 var
R18538:18538 LF.Logic <> R:65 var
R18520:18524 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18519:18519 LF.Logic <> P:63 var
R18525:18525 LF.Logic <> Q:64 var
prf 18777:18799 <> or_distributes_over_and
binder 18810:18810 <> P:66
binder 18812:18812 <> Q:67
binder 18814:18814 <> R:68
R18839:18843 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18827:18831 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18838:18838 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18826:18826 LF.Logic <> P:66 var
R18833:18836 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18832:18832 LF.Logic <> Q:67 var
R18837:18837 LF.Logic <> R:68 var
R18844:18844 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18851:18856 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18863:18863 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18846:18849 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18845:18845 LF.Logic <> P:66 var
R18850:18850 LF.Logic <> Q:67 var
R18858:18861 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18857:18857 LF.Logic <> P:66 var
R18862:18862 LF.Logic <> R:68 var
R19994:20007 Coq.Setoids.Setoid <> <> lib
prf 20841:20846 <> mult_0
binder 20857:20857 <> n:69
binder 20859:20859 <> m:70
R20871:20875 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20867:20869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20863:20865 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20862:20862 LF.Logic <> n:69 var
R20866:20866 LF.Logic <> m:70 var
R20881:20884 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20877:20879 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20876:20876 LF.Logic <> n:69 var
R20886:20888 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20885:20885 LF.Logic <> m:70 var
R20932:20940 LF.Logic <> mult_eq_0 thm
R20932:20940 LF.Logic <> mult_eq_0 thm
R20953:20961 LF.Logic <> eq_mult_0 thm
R20953:20961 LF.Logic <> eq_mult_0 thm
prf 20978:20985 <> or_assoc
binder 20998:20998 <> P:71
binder 21000:21000 <> Q:72
binder 21002:21002 <> R:73
R21025:21029 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21013:21017 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21024:21024 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21012:21012 LF.Logic <> P:71 var
R21019:21022 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21018:21018 LF.Logic <> Q:72 var
R21023:21023 LF.Logic <> R:73 var
R21030:21030 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21037:21041 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21032:21035 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21031:21031 LF.Logic <> P:71 var
R21036:21036 LF.Logic <> Q:72 var
R21042:21042 LF.Logic <> R:73 var
prf 21507:21514 <> mult_0_3
binder 21527:21527 <> n:74
binder 21529:21529 <> m:75
binder 21531:21531 <> p:76
R21547:21551 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21543:21545 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21539:21541 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21535:21537 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21534:21534 LF.Logic <> n:74 var
R21538:21538 LF.Logic <> m:75 var
R21542:21542 LF.Logic <> p:76 var
R21557:21560 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21553:21555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21552:21552 LF.Logic <> n:74 var
R21566:21569 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21562:21564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21561:21561 LF.Logic <> m:75 var
R21571:21573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21570:21570 LF.Logic <> p:76 var
R21610:21615 LF.Logic <> mult_0 thm
R21610:21615 LF.Logic <> mult_0 thm
R21610:21615 LF.Logic <> mult_0 thm
R21626:21631 LF.Logic <> mult_0 thm
R21626:21631 LF.Logic <> mult_0 thm
R21626:21631 LF.Logic <> mult_0 thm
R21645:21652 LF.Logic <> or_assoc thm
R21645:21652 LF.Logic <> or_assoc thm
R21645:21652 LF.Logic <> or_assoc thm
prf 21863:21879 <> apply_iff_example
R21898:21900 Coq.Init.Datatypes <> nat ind
binder 21892:21892 <> n:77
binder 21894:21894 <> m:78
R21912:21915 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21921:21924 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21917:21919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21916:21916 LF.Logic <> n:77 var
R21926:21928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21925:21925 LF.Logic <> m:78 var
R21908:21910 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21904:21906 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21903:21903 LF.Logic <> n:77 var
R21907:21907 LF.Logic <> m:78 var
R21963:21968 LF.Logic <> mult_0 thm
R21963:21968 LF.Logic <> mult_0 thm
def 22847:22850 <> even
binder 22852:22852 <> x:79
R22857:22863 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22871:22872 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22868:22870 Coq.Init.Datatypes <> nat ind
binder 22864:22864 <> n:80
R22874:22876 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22873:22873 LF.Logic <> x:79 var
R22877:22882 LF.Induction <> double def
R22884:22884 LF.Logic <> n:80 var
prf 22894:22905 <> four_is_even
R22909:22912 LF.Logic <> even def
R22933:22936 LF.Logic <> even def
prf 23162:23177 <> exists_example_2
binder 23188:23188 <> n:81
R23193:23193 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23213:23220 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23240:23240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23221:23227 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23229:23230 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23228:23228 <> o:82
R23232:23234 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23231:23231 LF.Logic <> n:81 var
R23236:23238 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23239:23239 LF.Logic <> o:82 var
R23194:23200 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23202:23203 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23201:23201 <> m:83
R23205:23207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23204:23204 LF.Logic <> n:81 var
R23209:23211 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23212:23212 LF.Logic <> m:83 var
R23340:23342 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23340:23342 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
prf 23621:23635 <> dist_not_exists
binder 23647:23647 <> X:84
R23661:23664 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23660:23660 LF.Logic <> X:84 var
binder 23656:23656 <> P:85
R23674:23674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23688:23692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23693:23695 Coq.Init.Logic <> ::type_scope:'~'_x not
R23711:23711 Coq.Init.Logic <> ::type_scope:'~'_x not
R23696:23702 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23704:23705 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23703:23703 <> x:86
R23706:23707 Coq.Init.Logic <> ::type_scope:'~'_x not
R23708:23708 LF.Logic <> P:85 var
R23710:23710 LF.Logic <> x:86 var
binder 23682:23682 <> x:87
R23685:23685 LF.Logic <> P:85 var
R23687:23687 LF.Logic <> x:87 var
R23747:23749 Coq.Init.Logic <> not def
prf 23981:23994 <> dist_exists_or
binder 24006:24006 <> X:88
R24022:24025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24021:24021 LF.Logic <> X:88 var
binder 24015:24015 <> P:89
binder 24017:24017 <> Q:90
R24035:24035 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24056:24061 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24036:24042 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24044:24045 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 24043:24043 <> x:91
R24049:24052 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24046:24046 LF.Logic <> P:89 var
R24048:24048 LF.Logic <> x:91 var
R24053:24053 LF.Logic <> Q:90 var
R24055:24055 LF.Logic <> x:91 var
R24062:24062 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24076:24081 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24095:24095 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24063:24069 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24071:24072 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 24070:24070 <> x:92
R24073:24073 LF.Logic <> P:89 var
R24075:24075 LF.Logic <> x:92 var
R24082:24088 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24090:24091 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 24089:24089 <> x:93
R24092:24092 LF.Logic <> Q:90 var
R24094:24094 LF.Logic <> x:93 var
def 25181:25182 <> In
binder 25185:25185 <> A:94
R25200:25200 LF.Logic <> A:94 var
binder 25196:25196 <> x:95
R25208:25211 LF.Poly <> list ind
R25213:25213 LF.Logic <> A:94 var
binder 25204:25204 <> l:96
R25234:25234 LF.Logic <> l:96 var
R25245:25246 LF.Poly <> :::'['_']' not
R25251:25255 Coq.Init.Logic <> False ind
R25263:25266 LF.Poly <> :::x_'::'_x not
R25279:25282 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25275:25277 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25278:25278 LF.Logic <> x:95 var
R25283:25284 LF.Logic <> In:97 def
R25286:25286 LF.Logic <> x:95 var
def 25420:25431 <> In_example_1
R25435:25436 LF.Logic <> In def
R25440:25440 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25442:25443 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25445:25446 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25448:25449 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25451:25452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25454:25454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 25551:25562 <> In_example_2
binder 25575:25575 <> n:99
R25589:25594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25595:25601 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25604:25605 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25602:25603 <> n':100
R25607:25609 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25606:25606 LF.Logic <> n:99 var
R25611:25613 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25614:25615 LF.Logic <> n':100 var
R25578:25579 LF.Logic <> In def
R25583:25583 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25585:25586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25588:25588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25581:25581 LF.Logic <> n:99 var
prf 26080:26085 <> In_map
binder 26099:26099 <> A:101
binder 26101:26101 <> B:102
R26117:26120 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26121:26121 LF.Logic <> B:102 var
R26116:26116 LF.Logic <> A:101 var
binder 26112:26112 <> f:103
R26129:26132 LF.Poly <> list ind
R26134:26134 LF.Logic <> A:101 var
binder 26125:26125 <> l:104
R26142:26142 LF.Logic <> A:101 var
binder 26138:26138 <> x:105
R26156:26163 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26164:26165 LF.Logic <> In def
R26174:26176 LF.Poly <> map def
R26180:26180 LF.Logic <> l:104 var
R26178:26178 LF.Logic <> f:103 var
R26168:26168 LF.Logic <> f:103 var
R26170:26170 LF.Logic <> x:105 var
R26150:26151 LF.Logic <> In def
R26155:26155 LF.Logic <> l:104 var
R26153:26153 LF.Logic <> x:105 var
prf 26935:26944 <> In_map_iff
binder 26958:26958 <> A:106
binder 26960:26960 <> B:107
R26976:26979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26980:26980 LF.Logic <> B:107 var
R26975:26975 LF.Logic <> A:106 var
binder 26971:26971 <> f:108
R26988:26991 LF.Poly <> list ind
R26993:26993 LF.Logic <> A:106 var
binder 26984:26984 <> l:109
R27001:27001 LF.Logic <> B:107 var
binder 26997:26997 <> y:110
R27023:27031 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R27009:27010 LF.Logic <> In def
R27015:27017 LF.Poly <> map def
R27021:27021 LF.Logic <> l:109 var
R27019:27019 LF.Logic <> f:108 var
R27012:27012 LF.Logic <> y:110 var
R27032:27038 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27040:27041 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 27039:27039 <> x:111
R27049:27052 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27045:27047 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27042:27042 LF.Logic <> f:108 var
R27044:27044 LF.Logic <> x:111 var
R27048:27048 LF.Logic <> y:110 var
R27053:27054 LF.Logic <> In def
R27058:27058 LF.Logic <> l:109 var
R27056:27056 LF.Logic <> x:111 var
R27474:27479 LF.Logic <> In_map thm
R27474:27479 LF.Logic <> In_map thm
prf 27570:27579 <> In_app_iff
binder 27590:27590 <> A:112
binder 27592:27592 <> l:113
binder 27594:27595 <> l':114
R27600:27600 LF.Logic <> A:112 var
binder 27598:27598 <> a:115
R27618:27622 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R27606:27607 LF.Logic <> In def
R27613:27614 LF.Poly <> :::x_'++'_x not
R27612:27612 LF.Logic <> l:113 var
R27615:27616 LF.Logic <> l':114 var
R27609:27609 LF.Logic <> a:115 var
R27629:27632 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R27623:27624 LF.Logic <> In def
R27628:27628 LF.Logic <> l:113 var
R27626:27626 LF.Logic <> a:115 var
R27633:27634 LF.Logic <> In def
R27638:27639 LF.Logic <> l':114 var
R27636:27636 LF.Logic <> a:115 var
R27894:27901 LF.Logic <> or_assoc thm
R27894:27901 LF.Logic <> or_assoc thm
R28063:28070 LF.Logic <> or_assoc thm
R28063:28070 LF.Logic <> or_assoc thm
def 28780:28782 <> All
binder 28785:28785 <> T:116
R28801:28804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28800:28800 LF.Logic <> T:116 var
binder 28796:28796 <> P:117
R28816:28819 LF.Poly <> list ind
R28821:28821 LF.Logic <> T:116 var
binder 28812:28812 <> l:118
R28842:28842 LF.Logic <> l:118 var
R28853:28854 LF.Poly <> :::'['_']' not
R28859:28862 Coq.Init.Logic <> True ind
R28870:28873 LF.Poly <> :::x_'::'_x not
R28884:28887 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R28880:28880 LF.Logic <> P:117 var
R28888:28890 LF.Logic <> All:119 def
R28892:28892 LF.Logic <> P:117 var
prf 28913:28918 <> All_In
binder 28931:28931 <> T:121
R28939:28942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28938:28938 LF.Logic <> T:121 var
binder 28934:28934 <> P:122
R28954:28957 LF.Poly <> list ind
R28959:28959 LF.Logic <> T:121 var
binder 28950:28950 <> l:123
R28967:28967 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28991:29000 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
binder 28975:28975 <> x:124
R28984:28987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28988:28988 LF.Logic <> P:122 var
R28990:28990 LF.Logic <> x:124 var
R28978:28979 LF.Logic <> In def
R28983:28983 LF.Logic <> l:123 var
R28981:28981 LF.Logic <> x:124 var
R29001:29003 LF.Logic <> All def
R29007:29007 LF.Logic <> l:123 var
R29005:29005 LF.Logic <> P:122 var
def 29898:29913 <> combine_odd_even
R29932:29935 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29929:29931 Coq.Init.Datatypes <> nat ind
binder 29916:29919 <> Podd:125
binder 29921:29925 <> Peven:126
R29947:29950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29944:29946 Coq.Init.Datatypes <> nat ind
binder 29965:29965 <> n:127
R29973:29976 LF.Basics <> oddb def
R29978:29978 LF.Logic <> n:127 var
R29997:30001 LF.Logic <> Peven:126 var
R30003:30003 LF.Logic <> n:127 var
R29985:29988 LF.Logic <> Podd:125 var
R29990:29990 LF.Logic <> n:127 var
prf 30075:30096 <> combine_odd_even_intro
R30126:30129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30123:30125 Coq.Init.Datatypes <> nat ind
binder 30110:30113 <> Podd:128
binder 30115:30119 <> Peven:129
R30141:30143 Coq.Init.Datatypes <> nat ind
binder 30137:30137 <> n:130
R30151:30151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30175:30183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30184:30184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30210:30218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30219:30234 LF.Logic <> combine_odd_even def
R30247:30247 LF.Logic <> n:130 var
R30241:30245 LF.Logic <> Peven:129 var
R30236:30239 LF.Logic <> Podd:128 var
R30199:30202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30203:30207 LF.Logic <> Peven:129 var
R30209:30209 LF.Logic <> n:130 var
R30191:30193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30185:30188 LF.Basics <> oddb def
R30190:30190 LF.Logic <> n:130 var
R30194:30198 LF.Basics <> false constr
R30165:30168 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30169:30172 LF.Logic <> Podd:128 var
R30174:30174 LF.Logic <> n:130 var
R30158:30160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30152:30155 LF.Basics <> oddb def
R30157:30157 LF.Logic <> n:130 var
R30161:30164 LF.Basics <> true constr
R30295:30310 LF.Logic <> combine_odd_even def
R30325:30328 LF.Basics <> oddb def
R30325:30328 LF.Basics <> oddb def
prf 30402:30426 <> combine_odd_even_elim_odd
R30456:30459 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30453:30455 Coq.Init.Datatypes <> nat ind
binder 30440:30443 <> Podd:131
binder 30445:30449 <> Peven:132
R30471:30473 Coq.Init.Datatypes <> nat ind
binder 30467:30467 <> n:133
R30510:30517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30531:30538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30539:30542 LF.Logic <> Podd:131 var
R30544:30544 LF.Logic <> n:133 var
R30524:30526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30518:30521 LF.Basics <> oddb def
R30523:30523 LF.Logic <> n:133 var
R30527:30530 LF.Basics <> true constr
R30481:30496 LF.Logic <> combine_odd_even def
R30509:30509 LF.Logic <> n:133 var
R30503:30507 LF.Logic <> Peven:132 var
R30498:30501 LF.Logic <> Podd:131 var
R30573:30588 LF.Logic <> combine_odd_even def
R30608:30611 LF.Basics <> oddb def
R30608:30611 LF.Basics <> oddb def
prf 30665:30690 <> combine_odd_even_elim_even
R30720:30723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30717:30719 Coq.Init.Datatypes <> nat ind
binder 30704:30707 <> Podd:134
binder 30709:30713 <> Peven:135
R30735:30737 Coq.Init.Datatypes <> nat ind
binder 30731:30731 <> n:136
R30774:30781 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30796:30803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30804:30808 LF.Logic <> Peven:135 var
R30810:30810 LF.Logic <> n:136 var
R30788:30790 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30782:30785 LF.Basics <> oddb def
R30787:30787 LF.Logic <> n:136 var
R30791:30795 LF.Basics <> false constr
R30745:30760 LF.Logic <> combine_odd_even def
R30773:30773 LF.Logic <> n:136 var
R30767:30771 LF.Logic <> Peven:135 var
R30762:30765 LF.Logic <> Podd:134 var
R30839:30854 LF.Logic <> combine_odd_even def
R30874:30877 LF.Basics <> oddb def
R30874:30877 LF.Basics <> oddb def
R31698:31700 Coq.Init.Datatypes <> nat ind
binder 31692:31692 <> n:137
binder 31694:31694 <> m:138
R31708:31710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31704:31706 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31703:31703 LF.Logic <> n:137 var
R31707:31707 LF.Logic <> m:138 var
R31712:31714 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31711:31711 LF.Logic <> m:138 var
R31715:31715 LF.Logic <> n:137 var
R31673:31681 LF.Induction <> plus_comm thm
prf 33055:33064 <> plus_comm3
binder 33077:33077 <> x:139
binder 33079:33079 <> y:140
binder 33081:33081 <> z:141
R33095:33097 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33085:33088 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33094:33094 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33084:33084 LF.Logic <> x:139 var
R33090:33092 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33089:33089 LF.Logic <> y:140 var
R33093:33093 LF.Logic <> z:141 var
R33098:33098 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33104:33107 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33100:33102 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33099:33099 LF.Logic <> z:141 var
R33103:33103 LF.Logic <> y:140 var
R33108:33108 LF.Logic <> x:139 var
R33405:33413 LF.Induction <> plus_comm thm
R33405:33413 LF.Induction <> plus_comm thm
R33405:33413 LF.Induction <> plus_comm thm
R33426:33434 LF.Induction <> plus_comm thm
R33426:33434 LF.Induction <> plus_comm thm
R33426:33434 LF.Induction <> plus_comm thm
prf 33716:33731 <> plus_comm3_take2
binder 33744:33744 <> x:142
binder 33746:33746 <> y:143
binder 33748:33748 <> z:144
R33762:33764 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33752:33755 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33761:33761 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33751:33751 LF.Logic <> x:142 var
R33757:33759 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33756:33756 LF.Logic <> y:143 var
R33760:33760 LF.Logic <> z:144 var
R33765:33765 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33771:33774 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33767:33769 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33766:33766 LF.Logic <> z:144 var
R33770:33770 LF.Logic <> y:143 var
R33775:33775 LF.Logic <> x:142 var
R33811:33819 LF.Induction <> plus_comm thm
R33811:33819 LF.Induction <> plus_comm thm
R33811:33819 LF.Induction <> plus_comm thm
R33841:33843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33837:33839 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33845:33847 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33841:33843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33837:33839 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33845:33847 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33864:33872 LF.Induction <> plus_comm thm
R33864:33872 LF.Induction <> plus_comm thm
R33864:33872 LF.Induction <> plus_comm thm
prf 34131:34146 <> plus_comm3_take3
binder 34159:34159 <> x:145
binder 34161:34161 <> y:146
binder 34163:34163 <> z:147
R34177:34179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34167:34170 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34176:34176 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34166:34166 LF.Logic <> x:145 var
R34172:34174 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34171:34171 LF.Logic <> y:146 var
R34175:34175 LF.Logic <> z:147 var
R34180:34180 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34186:34189 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34182:34184 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34181:34181 LF.Logic <> z:147 var
R34185:34185 LF.Logic <> y:146 var
R34190:34190 LF.Logic <> x:145 var
R34226:34234 LF.Induction <> plus_comm thm
R34226:34234 LF.Induction <> plus_comm thm
R34226:34234 LF.Induction <> plus_comm thm
R34248:34256 LF.Induction <> plus_comm thm
R34248:34256 LF.Induction <> plus_comm thm
R34248:34256 LF.Induction <> plus_comm thm
prf 34454:34463 <> in_not_nil
binder 34476:34476 <> A:148
R34483:34483 LF.Logic <> A:148 var
binder 34479:34479 <> x:149
R34491:34494 LF.Poly <> list ind
R34496:34496 LF.Logic <> A:148 var
binder 34487:34487 <> l:150
R34506:34509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34511:34514 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R34510:34510 LF.Logic <> l:150 var
R34515:34516 LF.Poly <> :::'['_']' not
R34500:34501 LF.Logic <> In def
R34505:34505 LF.Logic <> l:150 var
R34503:34503 LF.Logic <> x:149 var
R34551:34553 Coq.Init.Logic <> not def
prf 34946:34958 <> in_not_nil_42
R34975:34978 LF.Poly <> list ind
R34980:34982 Coq.Init.Datatypes <> nat ind
binder 34971:34971 <> l:151
R34992:34995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34997:35000 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R34996:34996 LF.Logic <> l:151 var
R35001:35002 LF.Poly <> :::'['_']' not
R34985:34986 LF.Logic <> In def
R34991:34991 LF.Logic <> l:151 var
R35039:35048 LF.Logic <> in_not_nil thm
R35039:35048 LF.Logic <> in_not_nil thm
prf 35149:35167 <> in_not_nil_42_take2
R35184:35187 LF.Poly <> list ind
R35189:35191 Coq.Init.Datatypes <> nat ind
binder 35180:35180 <> l:152
R35201:35204 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35206:35209 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R35205:35205 LF.Logic <> l:152 var
R35210:35211 LF.Poly <> :::'['_']' not
R35194:35195 LF.Logic <> In def
R35200:35200 LF.Logic <> l:152 var
R35243:35252 LF.Logic <> in_not_nil thm
R35243:35252 LF.Logic <> in_not_nil thm
prf 35323:35341 <> in_not_nil_42_take3
R35358:35361 LF.Poly <> list ind
R35363:35365 Coq.Init.Datatypes <> nat ind
binder 35354:35354 <> l:153
R35375:35378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35380:35383 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R35379:35379 LF.Logic <> l:153 var
R35384:35385 LF.Poly <> :::'['_']' not
R35368:35369 LF.Logic <> In def
R35374:35374 LF.Logic <> l:153 var
R35417:35426 LF.Logic <> in_not_nil thm
R35417:35426 LF.Logic <> in_not_nil thm
prf 35513:35531 <> in_not_nil_42_take4
R35548:35551 LF.Poly <> list ind
R35553:35555 Coq.Init.Datatypes <> nat ind
binder 35544:35544 <> l:154
R35565:35568 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35570:35573 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R35569:35569 LF.Logic <> l:154 var
R35574:35575 LF.Poly <> :::'['_']' not
R35558:35559 LF.Logic <> In def
R35564:35564 LF.Logic <> l:154 var
R35608:35617 LF.Logic <> in_not_nil thm
R35619:35621 Coq.Init.Datatypes <> nat ind
R35608:35617 LF.Logic <> in_not_nil thm
R35619:35621 Coq.Init.Datatypes <> nat ind
prf 35702:35720 <> in_not_nil_42_take5
R35737:35740 LF.Poly <> list ind
R35742:35744 Coq.Init.Datatypes <> nat ind
binder 35733:35733 <> l:155
R35754:35757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35759:35762 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R35758:35758 LF.Logic <> l:155 var
R35763:35764 LF.Poly <> :::'['_']' not
R35747:35748 LF.Logic <> In def
R35753:35753 LF.Logic <> l:155 var
R35797:35806 LF.Logic <> in_not_nil thm
R35797:35806 LF.Logic <> in_not_nil thm
def 36396:36415 <> lemma_application_ex
R36433:36435 Coq.Init.Datatypes <> nat ind
binder 36429:36429 <> n:156
R36444:36447 LF.Poly <> list ind
R36449:36451 Coq.Init.Datatypes <> nat ind
binder 36439:36440 <> ns:157
R36489:36496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36498:36500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36497:36497 LF.Logic <> n:156 var
R36459:36460 LF.Logic <> In def
R36465:36467 LF.Poly <> map def
R36486:36487 LF.Logic <> ns:157 var
binder 36474:36474 <> m:158
R36480:36482 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R36479:36479 LF.Logic <> m:158 var
R36462:36462 LF.Logic <> n:156 var
R36540:36544 LF.Logic <> proj1 thm
R36551:36560 LF.Logic <> In_map_iff thm
R36540:36544 LF.Logic <> proj1 thm
R36551:36560 LF.Logic <> In_map_iff thm
R36612:36619 LF.Induction <> mult_0_r thm
R36612:36619 LF.Induction <> mult_0_r thm
R36612:36619 LF.Induction <> mult_0_r thm
def 38509:38529 <> function_equality_ex1
R38535:38535 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38550:38554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38576:38576 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 38540:38540 <> x:159
R38546:38548 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R38549:38549 LF.Logic <> x:159 var
binder 38559:38559 <> x:160
R38564:38564 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R38571:38574 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R38565:38568 Coq.Init.Peano <> pred syndef
R38575:38575 LF.Logic <> x:160 var
def 39317:39337 <> function_equality_ex2
R39343:39343 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39361:39365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39383:39383 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 39348:39348 <> x:161
R39353:39356 Coq.Init.Peano <> plus syndef
R39358:39358 LF.Logic <> x:161 var
binder 39370:39370 <> x:162
R39375:39378 Coq.Init.Peano <> plus syndef
R39382:39382 LF.Logic <> x:162 var
ax 39521:39545 <> functional_extensionality
binder 39557:39557 <> X:163
binder 39559:39559 <> Y:164
R39612:39615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39616:39616 LF.Logic <> Y:164 var
R39611:39611 LF.Logic <> X:163 var
binder 39605:39605 <> f:165
binder 39607:39607 <> g:166
R39622:39622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39646:39650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39652:39654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39651:39651 LF.Logic <> f:165 var
R39655:39655 LF.Logic <> g:166 var
R39633:39633 LF.Logic <> X:163 var
binder 39631:39631 <> x:167
R39640:39642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39637:39637 LF.Logic <> f:165 var
R39639:39639 LF.Logic <> x:167 var
R39643:39643 LF.Logic <> g:166 var
R39645:39645 LF.Logic <> x:167 var
def 39965:39985 <> function_equality_ex2
R39991:39991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40009:40013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40031:40031 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 39996:39996 <> x:169
R40001:40004 Coq.Init.Peano <> plus syndef
R40006:40006 LF.Logic <> x:169 var
binder 40018:40018 <> x:170
R40023:40026 Coq.Init.Peano <> plus syndef
R40030:40030 LF.Logic <> x:170 var
R40049:40073 LF.Logic <> functional_extensionality prfax
R40049:40073 LF.Logic <> functional_extensionality prfax
R40094:40102 LF.Induction <> plus_comm thm
R40094:40102 LF.Induction <> plus_comm thm
R40808:40828 LF.Logic <> function_equality_ex2 ex
def 41382:41391 <> rev_append
binder 41394:41394 <> X:171
R41406:41409 LF.Poly <> list ind
R41411:41411 LF.Logic <> X:171 var
binder 41398:41399 <> l1:172
binder 41401:41402 <> l2:173
R41416:41419 LF.Poly <> list ind
R41421:41421 LF.Logic <> X:171 var
R41434:41435 LF.Logic <> l1:172 var
R41446:41447 LF.Poly <> :::'['_']' not
R41452:41453 LF.Logic <> l2:173 var
R41460:41463 LF.Poly <> :::x_'::'_x not
R41471:41480 LF.Logic <> rev_append:174 def
R41488:41491 LF.Poly <> :::x_'::'_x not
R41492:41493 LF.Logic <> l2:173 var
def 41515:41520 <> tr_rev
binder 41523:41523 <> X:176
R41531:41534 LF.Poly <> list ind
R41536:41536 LF.Logic <> X:176 var
binder 41527:41527 <> l:177
R41541:41544 LF.Poly <> list ind
R41546:41546 LF.Logic <> X:176 var
R41553:41562 LF.Logic <> rev_append def
R41566:41567 LF.Poly <> :::'['_']' not
R41564:41564 LF.Logic <> l:177 var
prf 41936:41941 <> lemma1
binder 41951:41951 <> X:178
R41957:41960 LF.Poly <> list ind
R41962:41962 LF.Logic <> X:178 var
binder 41954:41954 <> l:179
R41969:41969 LF.Logic <> X:178 var
binder 41966:41966 <> x:180
R41991:41993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41975:41984 LF.Logic <> rev_append def
R41988:41988 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41990:41990 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41989:41989 LF.Logic <> x:180 var
R41986:41986 LF.Logic <> l:179 var
R42010:42013 LF.Poly <> :::x_'++'_x not
R41994:42003 LF.Logic <> rev_append def
R42007:42009 LF.Poly <> :::'['_']' not
R42005:42005 LF.Logic <> l:179 var
R42014:42014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42016:42016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42015:42015 LF.Logic <> x:180 var
R42124:42132 LF.Poly <> app_assoc thm
R42124:42132 LF.Poly <> app_assoc thm
R42124:42132 LF.Poly <> app_assoc thm
prf 42163:42176 <> tr_rev_correct
binder 42187:42187 <> X:181
R42199:42201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42191:42196 LF.Logic <> tr_rev def
R42198:42198 LF.Logic <> X:181 var
R42203:42205 LF.Poly <> rev def
R42207:42207 LF.Logic <> X:181 var
R42237:42261 LF.Logic <> functional_extensionality prfax
R42237:42261 LF.Logic <> functional_extensionality prfax
R42326:42331 LF.Logic <> tr_rev def
R42364:42369 LF.Logic <> tr_rev def
def 42796:42807 <> even_42_bool
R42819:42821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42811:42815 LF.Basics <> evenb def
R42822:42825 LF.Basics <> true constr
def 42929:42940 <> even_42_prop
R42944:42947 LF.Logic <> even def
R42967:42970 LF.Logic <> even def
prf 43239:43250 <> evenb_double
binder 43261:43261 <> k:182
R43280:43282 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43264:43268 LF.Basics <> evenb def
R43271:43276 LF.Induction <> double def
R43278:43278 LF.Logic <> k:182 var
R43283:43286 LF.Basics <> true constr
prf 43387:43403 <> negb_true_b_false
binder 43414:43414 <> b:183
R43434:43437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43439:43441 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43438:43438 LF.Logic <> b:183 var
R43442:43446 LF.Basics <> false constr
R43427:43429 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43421:43424 LF.Basics <> negb def
R43426:43426 LF.Logic <> b:183 var
R43430:43433 LF.Basics <> true constr
prf 43539:43555 <> negb_false_b_true
binder 43566:43566 <> b:184
R43587:43590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43592:43594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43591:43591 LF.Logic <> b:184 var
R43595:43598 LF.Basics <> true constr
R43579:43581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43573:43576 LF.Basics <> negb def
R43578:43578 LF.Logic <> b:184 var
R43582:43586 LF.Basics <> false constr
prf 43752:43768 <> evenb_double_conv
binder 43779:43779 <> n:185
R43782:43788 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R43790:43793 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 43789:43789 <> k:186
R43795:43797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43794:43794 LF.Logic <> n:185 var
R43801:43805 LF.Basics <> evenb def
R43807:43807 LF.Logic <> n:185 var
R43828:43828 Coq.Init.Datatypes <> S constr
R43831:43836 LF.Induction <> double def
R43838:43838 LF.Logic <> k:186 var
R43814:43819 LF.Induction <> double def
R43821:43821 LF.Logic <> k:186 var
R44024:44030 LF.Induction <> evenb_S thm
R44024:44030 LF.Induction <> evenb_S thm
R44024:44030 LF.Induction <> evenb_S thm
R44074:44077 LF.Basics <> negb def
R44080:44084 LF.Basics <> evenb def
R44074:44077 LF.Basics <> negb def
R44080:44084 LF.Basics <> evenb def
R44111:44127 LF.Logic <> negb_true_b_false thm
R44130:44134 LF.Basics <> evenb def
R44111:44127 LF.Logic <> negb_true_b_false thm
R44130:44134 LF.Basics <> evenb def
R44161:44161 Coq.Init.Datatypes <> S constr
R44161:44161 Coq.Init.Datatypes <> S constr
R44227:44243 LF.Logic <> negb_false_b_true thm
R44246:44250 LF.Basics <> evenb def
R44227:44243 LF.Logic <> negb_false_b_true thm
R44246:44250 LF.Basics <> evenb def
prf 44363:44376 <> even_bool_prop
binder 44387:44387 <> n:187
R44406:44410 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R44399:44401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44392:44396 LF.Basics <> evenb def
R44398:44398 LF.Logic <> n:187 var
R44402:44405 LF.Basics <> true constr
R44411:44414 LF.Logic <> even def
R44416:44416 LF.Logic <> n:187 var
R44469:44485 LF.Logic <> evenb_double_conv thm
R44469:44485 LF.Logic <> evenb_double_conv thm
R44588:44599 LF.Logic <> evenb_double thm
R44588:44599 LF.Logic <> evenb_double thm
prf 44982:44987 <> eqb_eq
R45006:45008 Coq.Init.Datatypes <> nat ind
binder 44998:44999 <> n1:188
binder 45001:45002 <> n2:189
R45028:45032 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45021:45023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45015:45018 LF.Basics <> ::nat_scope:x_'=?'_x not
R45013:45014 LF.Logic <> n1:188 var
R45019:45020 LF.Logic <> n2:189 var
R45024:45027 LF.Basics <> true constr
R45035:45037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45033:45034 LF.Logic <> n1:188 var
R45038:45039 LF.Logic <> n2:189 var
R45082:45089 LF.Tactics <> eqb_true thm
R45082:45089 LF.Tactics <> eqb_true thm
R45128:45135 LF.Induction <> eqb_refl thm
R45128:45135 LF.Induction <> eqb_refl thm
R45128:45135 LF.Induction <> eqb_refl thm
def 46114:46126 <> is_even_prime
binder 46128:46128 <> n:190
R46139:46141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46138:46138 LF.Logic <> n:190 var
R46161:46165 LF.Basics <> false constr
R46149:46152 LF.Basics <> true constr
R47734:47737 LF.Logic <> even def
def 47749:47757 <> even_1000
R47761:47764 LF.Logic <> even def
R47873:47876 LF.Logic <> even def
def 48091:48100 <> even_1000'
R48114:48116 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48104:48108 LF.Basics <> evenb def
R48117:48120 LF.Basics <> true constr
def 48343:48353 <> even_1000''
R48357:48360 LF.Logic <> even def
R48381:48394 LF.Logic <> even_bool_prop thm
R48381:48394 LF.Logic <> even_bool_prop thm
def 48952:48964 <> not_even_1001
R48978:48980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48968:48972 LF.Basics <> evenb def
R48981:48985 LF.Basics <> false constr
def 49141:49154 <> not_even_1001'
R49158:49159 Coq.Init.Logic <> ::type_scope:'~'_x not
R49169:49169 Coq.Init.Logic <> ::type_scope:'~'_x not
R49160:49163 LF.Logic <> even def
R49216:49229 LF.Logic <> even_bool_prop thm
R49216:49229 LF.Logic <> even_bool_prop thm
R49216:49229 LF.Logic <> even_bool_prop thm
R49241:49243 Coq.Init.Logic <> not def
prf 49633:49648 <> plus_eqb_example
R49667:49669 Coq.Init.Datatypes <> nat ind
binder 49659:49659 <> n:191
binder 49661:49661 <> m:192
binder 49663:49663 <> p:193
R49689:49692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49707:49709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49698:49701 LF.Basics <> ::nat_scope:x_'=?'_x not
R49694:49696 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R49693:49693 LF.Logic <> n:191 var
R49697:49697 LF.Logic <> p:193 var
R49703:49705 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R49702:49702 LF.Logic <> m:192 var
R49706:49706 LF.Logic <> p:193 var
R49710:49713 LF.Basics <> true constr
R49682:49684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49677:49680 LF.Basics <> ::nat_scope:x_'=?'_x not
R49676:49676 LF.Logic <> n:191 var
R49681:49681 LF.Logic <> m:192 var
R49685:49688 LF.Basics <> true constr
R49777:49782 LF.Logic <> eqb_eq thm
R49777:49782 LF.Logic <> eqb_eq thm
R49777:49782 LF.Logic <> eqb_eq thm
R49813:49818 LF.Logic <> eqb_eq thm
R49813:49818 LF.Logic <> eqb_eq thm
R49813:49818 LF.Logic <> eqb_eq thm
prf 50352:50364 <> andb_true_iff
R50381:50384 LF.Basics <> bool ind
binder 50375:50376 <> b1:194
binder 50378:50379 <> b2:195
R50404:50408 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R50397:50399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50391:50394 LF.Basics <> :::x_'&&'_x not
R50389:50390 LF.Logic <> b1:194 var
R50395:50396 LF.Logic <> b2:195 var
R50400:50403 LF.Basics <> true constr
R50418:50421 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R50411:50413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50409:50410 LF.Logic <> b1:194 var
R50414:50417 LF.Basics <> true constr
R50424:50426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50422:50423 LF.Logic <> b2:195 var
R50427:50430 LF.Basics <> true constr
prf 50861:50862 <> l1
binder 50872:50872 <> b:196
R50894:50897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50899:50901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50898:50898 LF.Logic <> b:196 var
R50902:50905 LF.Basics <> true constr
R50887:50889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50882:50885 LF.Basics <> :::x_'||'_x not
R50877:50881 LF.Basics <> false constr
R50886:50886 LF.Logic <> b:196 var
R50890:50893 LF.Basics <> true constr
prf 50968:50979 <> orb_true_iff
binder 50990:50991 <> b1:197
binder 50993:50994 <> b2:198
R51014:51018 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R51007:51009 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51001:51004 LF.Basics <> :::x_'||'_x not
R50999:51000 LF.Logic <> b1:197 var
R51005:51006 LF.Logic <> b2:198 var
R51010:51013 LF.Basics <> true constr
R51028:51031 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R51021:51023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51019:51020 LF.Logic <> b1:197 var
R51024:51027 LF.Basics <> true constr
R51034:51036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51032:51033 LF.Logic <> b2:198 var
R51037:51040 LF.Basics <> true constr
prf 51585:51591 <> eqb_neq
R51608:51610 Coq.Init.Datatypes <> nat ind
binder 51602:51602 <> x:199
binder 51604:51604 <> y:200
R51629:51633 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R51621:51623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51616:51619 LF.Basics <> ::nat_scope:x_'=?'_x not
R51615:51615 LF.Logic <> x:199 var
R51620:51620 LF.Logic <> y:200 var
R51624:51628 LF.Basics <> false constr
R51635:51638 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R51634:51634 LF.Logic <> x:199 var
R51639:51639 LF.Logic <> y:200 var
R51676:51693 LF.Logic <> not_true_iff_false thm
R51676:51693 LF.Logic <> not_true_iff_false thm
R51676:51693 LF.Logic <> not_true_iff_false thm
R51705:51707 Coq.Init.Logic <> not def
R51720:51725 LF.Logic <> eqb_eq thm
R51720:51725 LF.Logic <> eqb_eq thm
R51720:51725 LF.Logic <> eqb_eq thm
def 52155:52162 <> eqb_list
binder 52165:52165 <> A:201
R52183:52186 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52188:52191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52192:52195 LF.Basics <> bool ind
R52187:52187 LF.Logic <> A:201 var
R52182:52182 LF.Logic <> A:201 var
binder 52176:52178 <> eqb:202
R52216:52219 LF.Poly <> list ind
R52221:52221 LF.Logic <> A:201 var
binder 52208:52209 <> l1:203
binder 52211:52212 <> l2:204
R52226:52229 LF.Basics <> bool ind
R52246:52247 LF.Logic <> l2:204 var
R52242:52243 LF.Logic <> l1:203 var
R52258:52259 LF.Poly <> :::'['_']' not
R52262:52263 LF.Poly <> :::'['_']' not
R52268:52271 LF.Basics <> true constr
R52277:52278 LF.Poly <> :::'['_']' not
R52286:52290 LF.Basics <> false constr
R52299:52300 LF.Poly <> :::'['_']' not
R52305:52309 LF.Basics <> false constr
R52317:52320 LF.Poly <> :::x_'::'_x not
R52327:52330 LF.Poly <> :::x_'::'_x not
R52337:52337 LF.Basics <> :::x_'&&'_x not
R52347:52353 LF.Basics <> :::x_'&&'_x not
R52372:52372 LF.Basics <> :::x_'&&'_x not
R52338:52340 LF.Logic <> eqb:202 var
R52354:52361 LF.Logic <> eqb_list:205 def
R52363:52365 LF.Logic <> eqb:202 var
prf 52391:52407 <> eqb_list_true_iff
binder 52420:52420 <> A:208
R52430:52433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52435:52438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52439:52442 LF.Basics <> bool ind
R52434:52434 LF.Logic <> A:208 var
R52429:52429 LF.Logic <> A:208 var
binder 52423:52425 <> eqb:209
R52450:52450 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52493:52501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 52509:52510 <> l1:210
binder 52512:52513 <> l2:211
R52541:52545 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52534:52536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52516:52523 LF.Logic <> eqb_list def
R52532:52533 LF.Logic <> l2:211 var
R52529:52530 LF.Logic <> l1:210 var
R52525:52527 LF.Logic <> eqb:209 var
R52537:52540 LF.Basics <> true constr
R52548:52550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52546:52547 LF.Logic <> l1:210 var
R52551:52552 LF.Logic <> l2:211 var
binder 52458:52459 <> a1:212
binder 52461:52462 <> a2:213
R52481:52485 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52474:52476 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52465:52467 LF.Logic <> eqb:209 var
R52472:52473 LF.Logic <> a2:213 var
R52469:52470 LF.Logic <> a1:212 var
R52477:52480 LF.Basics <> true constr
R52488:52490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52486:52487 LF.Logic <> a1:212 var
R52491:52492 LF.Logic <> a2:213 var
R52950:52962 LF.Logic <> andb_true_iff thm
R52950:52962 LF.Logic <> andb_true_iff thm
R53195:53207 LF.Logic <> andb_true_iff thm
R53195:53207 LF.Logic <> andb_true_iff thm
def 53488:53494 <> forallb
binder 53497:53497 <> X:214
R53516:53519 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53520:53523 LF.Basics <> bool ind
R53515:53515 LF.Logic <> X:214 var
binder 53508:53511 <> test:215
R53531:53534 LF.Poly <> list ind
R53536:53536 LF.Logic <> X:214 var
binder 53527:53527 <> l:216
R53541:53544 LF.Basics <> bool ind
R53557:53557 LF.Logic <> l:216 var
R53568:53569 LF.Poly <> :::'['_']' not
R53574:53577 LF.Basics <> true constr
R53584:53587 LF.Poly <> :::x_'::'_x not
R53594:53597 LF.Basics <> andb def
R53609:53615 LF.Logic <> forallb:217 def
R53617:53620 LF.Logic <> test:215 var
R53600:53603 LF.Logic <> test:215 var
prf 53740:53755 <> forallb_true_iff
binder 53766:53766 <> X:219
binder 53768:53771 <> test:220
R53778:53781 LF.Poly <> list ind
R53783:53783 LF.Logic <> X:219 var
binder 53774:53774 <> l:221
R53811:53815 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R53804:53806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53790:53796 LF.Logic <> forallb def
R53803:53803 LF.Logic <> l:221 var
R53798:53801 LF.Logic <> test:220 var
R53807:53810 LF.Basics <> true constr
R53816:53818 LF.Logic <> All def
R53845:53845 LF.Logic <> l:221 var
binder 53825:53825 <> x:222
R53836:53838 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53830:53833 LF.Logic <> test:220 var
R53835:53835 LF.Logic <> x:222 var
R53839:53842 LF.Basics <> true constr
R53964:53976 LF.Logic <> andb_true_iff thm
R53964:53976 LF.Logic <> andb_true_iff thm
R54216:54228 LF.Logic <> andb_true_iff thm
R54216:54228 LF.Logic <> andb_true_iff thm
def 54892:54906 <> excluded_middle
binder 54918:54918 <> P:223
R54931:54934 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R54930:54930 LF.Logic <> P:223 var
R54935:54936 Coq.Init.Logic <> ::type_scope:'~'_x not
R54937:54937 LF.Logic <> P:223 var
prf 55697:55722 <> restricted_excluded_middle
binder 55733:55733 <> P:224
binder 55735:55735 <> b:225
R55740:55740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55755:55759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55761:55764 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R55760:55760 LF.Logic <> P:224 var
R55765:55766 Coq.Init.Logic <> ::type_scope:'~'_x not
R55767:55767 LF.Logic <> P:224 var
R55742:55746 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R55741:55741 LF.Logic <> P:224 var
R55748:55750 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55747:55747 LF.Logic <> b:225 var
R55751:55754 LF.Basics <> true constr
prf 56016:56044 <> restricted_excluded_middle_eq
R56062:56064 Coq.Init.Datatypes <> nat ind
binder 56056:56056 <> n:226
binder 56058:56058 <> m:227
R56075:56078 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56071:56073 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56070:56070 LF.Logic <> n:226 var
R56074:56074 LF.Logic <> m:227 var
R56080:56083 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R56079:56079 LF.Logic <> n:226 var
R56084:56084 LF.Logic <> m:227 var
R56117:56142 LF.Logic <> restricted_excluded_middle thm
R56154:56157 LF.Basics <> ::nat_scope:x_'=?'_x not
R56146:56148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56117:56142 LF.Logic <> restricted_excluded_middle thm
R56154:56157 LF.Basics <> ::nat_scope:x_'=?'_x not
R56146:56148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56183:56188 LF.Logic <> eqb_eq thm
R56183:56188 LF.Logic <> eqb_eq thm
prf 60650:60676 <> excluded_middle_irrefutable
binder 60687:60687 <> P:228
R60698:60699 Coq.Init.Logic <> ::type_scope:'~'_x not
R60700:60702 Coq.Init.Logic <> ::type_scope:'~'_x not
R60711:60711 Coq.Init.Logic <> ::type_scope:'~'_x not
R60704:60707 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R60703:60703 LF.Logic <> P:228 var
R60708:60709 Coq.Init.Logic <> ::type_scope:'~'_x not
R60710:60710 LF.Logic <> P:228 var
R60730:60732 Coq.Init.Logic <> not def
prf 61251:61265 <> not_exists_dist
R61286:61291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 61300:61300 <> X:229
R61314:61317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61313:61313 LF.Logic <> X:229 var
binder 61309:61309 <> P:230
R61348:61352 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61366:61366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 61360:61360 <> x:231
R61363:61363 LF.Logic <> P:230 var
R61365:61365 LF.Logic <> x:231 var
R61329:61331 Coq.Init.Logic <> ::type_scope:'~'_x not
R61347:61347 Coq.Init.Logic <> ::type_scope:'~'_x not
R61332:61338 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R61340:61341 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 61339:61339 <> x:232
R61342:61343 Coq.Init.Logic <> ::type_scope:'~'_x not
R61344:61344 LF.Logic <> P:230 var
R61346:61346 LF.Logic <> x:232 var
R61271:61285 LF.Logic <> excluded_middle def
R61385:61399 LF.Logic <> excluded_middle def
def 62250:62255 <> peirce
binder 62267:62267 <> P:233
binder 62269:62269 <> Q:234
R62280:62280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62290:62292 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62293:62293 LF.Logic <> P:233 var
R62281:62281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62286:62288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62289:62289 LF.Logic <> P:233 var
R62283:62284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62285:62285 LF.Logic <> Q:234 var
R62282:62282 LF.Logic <> P:233 var
def 62308:62334 <> double_negation_elimination
binder 62346:62346 <> P:235
R62359:62362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62363:62363 LF.Logic <> P:235 var
R62356:62356 Coq.Init.Logic <> ::type_scope:'~'_x not
R62357:62357 Coq.Init.Logic <> ::type_scope:'~'_x not
R62358:62358 LF.Logic <> P:235 var
def 62378:62398 <> de_morgan_not_and_not
binder 62410:62410 <> P:236
binder 62412:62412 <> Q:237
R62433:62436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62438:62439 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R62437:62437 LF.Logic <> P:236 var
R62440:62440 LF.Logic <> Q:237 var
R62422:62423 Coq.Init.Logic <> ::type_scope:'~'_x not
R62432:62432 Coq.Init.Logic <> ::type_scope:'~'_x not
R62426:62429 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62424:62424 Coq.Init.Logic <> ::type_scope:'~'_x not
R62425:62425 LF.Logic <> P:236 var
R62430:62430 Coq.Init.Logic <> ::type_scope:'~'_x not
R62431:62431 LF.Logic <> Q:237 var
def 62455:62467 <> implies_to_or
binder 62479:62479 <> P:238
binder 62481:62481 <> Q:239
R62491:62491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62496:62501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62507:62507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62504:62505 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R62502:62502 Coq.Init.Logic <> ::type_scope:'~'_x not
R62503:62503 LF.Logic <> P:238 var
R62506:62506 LF.Logic <> Q:239 var
R62493:62494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62495:62495 LF.Logic <> Q:239 var
R62492:62492 LF.Logic <> P:238 var
prf 62547:62571 <> excluded_middle_to_peirce
binder 62582:62582 <> P:240
binder 62584:62584 <> Q:241
R62612:62615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62616:62621 LF.Logic <> peirce def
R62597:62611 LF.Logic <> excluded_middle def
R62654:62668 LF.Logic <> excluded_middle def
R62678:62683 LF.Logic <> peirce def
R62802:62804 Coq.Init.Logic <> not def
prf 62862:62898 <> peirce_to_double_negation_elimination
binder 62909:62909 <> P:242
binder 62911:62911 <> Q:243
R62930:62933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62934:62960 LF.Logic <> double_negation_elimination def
R62924:62929 LF.Logic <> peirce def
R62993:62998 LF.Logic <> peirce def
R63010:63036 LF.Logic <> double_negation_elimination def
R63073:63075 Coq.Init.Logic <> not def
R63105:63109 Coq.Init.Logic <> False ind
R63105:63109 Coq.Init.Logic <> False ind
prf 63169:63220 <> double_negation_elimination_to_de_morgan_not_and_not
R63255:63258 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63259:63279 LF.Logic <> de_morgan_not_and_not def
R63228:63254 LF.Logic <> double_negation_elimination def
R63298:63324 LF.Logic <> double_negation_elimination def
R63336:63356 LF.Logic <> de_morgan_not_and_not def
R63395:63397 Coq.Init.Logic <> not def
R63415:63417 Coq.Init.Logic <> not def
R63444:63447 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R63444:63447 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
prf 63574:63608 <> de_morgan_not_and_not_implies_to_or
R63635:63638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63639:63651 LF.Logic <> implies_to_or def
R63614:63634 LF.Logic <> de_morgan_not_and_not def
R63670:63690 LF.Logic <> de_morgan_not_and_not def
R63702:63714 LF.Logic <> implies_to_or def
R63726:63728 Coq.Init.Logic <> not def
R63785:63788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63789:63793 Coq.Init.Logic <> False ind
R63785:63788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63789:63793 Coq.Init.Logic <> False ind
prf 63905:63936 <> implies_to_or_to_excluded_middle
R63955:63958 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63959:63973 LF.Logic <> excluded_middle def
R63942:63954 LF.Logic <> implies_to_or def
R63992:64004 LF.Logic <> implies_to_or def
R64016:64030 LF.Logic <> excluded_middle def
R64066:64074 LF.Logic <> or_commut thm
R64066:64074 LF.Logic <> or_commut thm
